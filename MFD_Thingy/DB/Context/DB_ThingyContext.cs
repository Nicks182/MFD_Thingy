// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.IO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace MFD_Thingy.DB.Context
{
    public partial class DB_ThingyContext : DbContext
    {
        public DB_ThingyContext()
        {
        }

        public DB_ThingyContext(DbContextOptions<DB_ThingyContext> options)
            : base(options)
        {
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlite("Data Source=" + _GetDBPath());
        }

        private string _GetDBPath()
        {
            //string path = Path.Combine(Directory.GetCurrentDirectory(), @"DB\MFD_Thingy.db");
            
            return Path.Combine(Directory.GetCurrentDirectory(), @"DB\MFD_Thingy.db");
        }

        public virtual DbSet<Action> Actions { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Control_Action> Control_Actions { get; set; }
        public virtual DbSet<Screen> Screens { get; set; }
        public virtual DbSet<Screen_Control> Screen_Controls { get; set; }
        public virtual DbSet<Theme> Themes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Action>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Actions_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.App)
                    .WithMany(p => p.Actions)
                    .HasForeignKey(d => d.AppId);
            });

            modelBuilder.Entity<Application>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Applications_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Control_Action>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Control_Actions_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.Action)
                    .WithMany(p => p.Control_Actions)
                    .HasForeignKey(d => d.ActionId);

                entity.HasOne(d => d.Control)
                    .WithMany(p => p.Control_Actions)
                    .HasForeignKey(d => d.ControlId);
            });

            modelBuilder.Entity<Screen>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Screens_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.App)
                    .WithMany(p => p.Screens)
                    .HasForeignKey(d => d.AppId);
            });

            modelBuilder.Entity<Screen_Control>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Screen_Items_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.Screen)
                    .WithMany(p => p.Screen_Items)
                    .HasForeignKey(d => d.ScreenId);
            });

            modelBuilder.Entity<Theme>(entity =>
            {
                entity.HasIndex(e => e.Id, "IX_Themes_Id")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.HasOne(d => d.App)
                    .WithMany(p => p.Themes)
                    .HasForeignKey(d => d.AppId);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}